#!/usr/bin/env escript
%% -*- erlang -*-
%%! -pa .eunit deps/jiffy/ebin deps/ej/ebin

%% requires access to unexported handle_command so uses .eunit on code path

-module(do_xml).

-compile([export_all]).

-include_lib("xmerl/include/xmerl.hrl").
-define(XML_HEADER, <<"<?xml version=\"1.0\" encoding=\"UTF-8\"?>">>).
-define(UPDATE_S, <<"<update>">>).
-define(UPDATE_E, <<"</update>">>).
-define(ADD_S, <<"<add>">>).
-define(ADD_E, <<"</add>">>).

main(Dir) ->
    Files = filelib:wildcard(Dir ++ "/**.merged") ++ filelib:wildcard(Dir ++ "/**/**.merged"),
    application:start(jiffy),
    [ process_file(F) || F <- Files ],
    ok.

process_file(File) ->
    {ok, Bin} = file:read_file(File),
    Node = jiffy:decode(Bin),
    Cmd = chef_index_expand:make_command(add, node, <<"beef123">>, <<"db123">>, Node),
    {ToAdd,ToDel} = chef_index_expand:handle_commands([Cmd]),
     Doc = [?XML_HEADER,
                   ?UPDATE_S,
                   ToDel,
                   value_or_empty(ToAdd, [?ADD_S, ToAdd, ?ADD_E]),
                   ?UPDATE_E],

    OutFile = File ++ ".xml.erlang",
    file:write_file(OutFile, [Doc]),
    ok.

value_or_empty([], _V) ->
    [];
value_or_empty([_|_], V) ->
    V.
